<UserControl x:Class="BinaryTreeProject.Views.BinaryTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BinaryTreeProject.Views"
             xmlns:vm="clr-namespace:BinaryTreeProject.ViewModels"
             xmlns:converters="clr-namespace:BinaryTreeProject.ViewModels.ValueConverters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <vm:BinaryTreeViewModel x:Key="vm" />
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <converters:IdToColorConverter x:Key="IdToColor" />
        <converters:ValueToStringConverter x:Key="ValueToString" />
        <converters:BoolToTextConverter x:Key="BoolToText" />
    </UserControl.Resources>
    <Grid DataContext="{StaticResource vm}" x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <Popup Margin="5" HorizontalAlignment="Left"   
            VerticalAlignment="Top" IsOpen="{Binding PopupVisible}" Placement="Mouse">
            <Border BorderThickness="3" BorderBrush="Black">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"
                    Orientation="Horizontal" Background="White"
                    >
                    <TextBlock Padding="5" Text="Value:" FontWeight="Bold" VerticalAlignment="Center"/>
                    <TextBox Width="40" Margin="10" FontSize="14" FontWeight="Bold"
                             Text="{Binding NewNodeValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             KeyDown="NewNodeTB_KeyDown" x:Name="NewNodeTB" />
                    <Button  Cursor="Hand" Padding="5" Margin="5" BorderBrush="Transparent"
                             BorderThickness="0" Background="Transparent"
                             Command="{Binding AddOrUpdateNodeCommand}" CommandParameter="{Binding NewNodeValue}">

                        <Button.Content>
                            <Image Width="20">
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Style.Triggers>
                                            <Trigger Property="IsEnabled" Value="True">
                                                <Setter Property="Source" Value="/Icons/done.png" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Source" Value="/Icons/done-gray.png" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                        </Button.Content>
                    </Button>
                    <Button Cursor="Hand" Command="{Binding CancelAddCommand}" Padding="5" Margin="5"
                            BorderBrush="Transparent" BorderThickness="0" Background="Transparent">
                        <Button.Content>
                            <Image Source="/Icons/cancel.png" Width="20" />
                        </Button.Content>
                    </Button>
                </StackPanel>
            </Border>
        </Popup>


        <Popup Margin="5" HorizontalAlignment="Left"   
            VerticalAlignment="Top" IsOpen="{Binding MessagePopupVisible}"
               Placement="Top" PlacementTarget="{Binding ElementName=BottomSP}"
               PopupAnimation="Scroll">
            <Border BorderThickness="3">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsError}" Value="False">
                                <Setter Property="BorderBrush" Value="Green"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsError}" Value="True">
                                <Setter Property="BorderBrush" Value="Red"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"
                    Orientation="Horizontal" Background="White"
                    >
                    <TextBlock Padding="15" FontSize="18" Width="200" TextWrapping="Wrap"
                               Text="{Binding PopupMessage}" FontWeight="Bold" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsError}" Value="False">
                                        <Setter Property="Foreground" Value="Green"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsError}" Value="True">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <Button Cursor="Hand" Command="{Binding ClosePopupCommand}" Padding="5" Margin="5"
                            BorderBrush="Transparent" BorderThickness="0" Background="Transparent">
                        <Button.Content>
                            <Image Source="/Icons/cancel.png" Width="20" Height="20" />
                        </Button.Content>
                    </Button>
                </StackPanel>
            </Border>
        </Popup>

        <Border Grid.Row="0" BorderBrush="Black" BorderThickness="0 0 0 3" Background="{StaticResource HeaderColor}" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <ToolBarPanel Grid.Column="0" ClipToBounds="True">
                    <ToolBar Background="Transparent" ToolBarTray.IsLocked="True" Margin="5 0 -16 0" >
                        <Menu VerticalAlignment="Center" Background="Transparent">
                            <MenuItem Width="60">
                                <MenuItem.Icon>
                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Width="60">
                                        <Image Source="/Icons/save.png" />
                                        <TextBlock Text="Save" Style="{StaticResource ToolbarText}"/>
                                    </StackPanel>
                                </MenuItem.Icon>

                                <MenuItem Header="Save to file" Command="{Binding SaveTreeToFileCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="/Icons/file.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>

                                <MenuItem Header="Save to database" Command="{Binding SaveTreeToDBCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="/Icons/database.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem>
                        </Menu>

                        <Menu VerticalAlignment="Center" Background="Transparent">
                            <MenuItem Width="60">
                                <MenuItem.Icon>
                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Width="60">
                                        <Image Source="/Icons/load.png" />
                                        <TextBlock Text="Load" Style="{StaticResource ToolbarText}"/>
                                    </StackPanel>
                                </MenuItem.Icon>

                                <MenuItem Header="Load from file" Command="{Binding LoadTreeFromFileCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="/Icons/file.png" />
                                    </MenuItem.Icon>
                                </MenuItem>

                                <MenuItem Header="Load from database" Command="{Binding LoadTreeFromDBCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="/Icons/database.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem>
                        </Menu>

                        <Button Style="{StaticResource ToolbarButton}"
                        Command="{Binding UndoCommand}">
                            <Button.Content>
                                <StackPanel Orientation="Vertical">
                                    <Image Source="/Icons/undo.png"  />
                                    <TextBlock Text="Undo" Style="{StaticResource ToolbarText}"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>

                        <Button Style="{StaticResource ToolbarButton}"
                        Command="{Binding RedoCommand}">
                            <Button.Content>
                                <StackPanel Orientation="Vertical">
                                    <Image Source="/Icons/redo.png"  />
                                    <TextBlock Text="Redo" Style="{StaticResource ToolbarText}"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>


                        <Button Style="{StaticResource ToolbarButton}" Command="{Binding DeleteButtonClickCommand}">
                            <Button.Content>
                                <StackPanel Orientation="Vertical">
                                    <Image Source="/Icons/delete.png"  />
                                    <TextBlock Text="Delete" Style="{StaticResource ToolbarText}"/>
                                </StackPanel>
                            </Button.Content>
                        </Button>

                        <Button Style="{StaticResource ToolbarButton}" Command="{Binding AddButtonClickCommand}">
                            <Button.Content>
                                <StackPanel Orientation="Vertical">
                                    <Image Width="30">
                                        <Image.Style>
                                            <Style TargetType="{x:Type Image}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding InputVisible}" Value="False">
                                                        <Setter Property="Source" Value="/Icons/add.png"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding InputVisible}" Value="True">
                                                        <Setter Property="Source" Value="/Icons/cancel.png"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <TextBlock Style="{StaticResource ToolbarText}" Text="{Binding InputVisible, Converter={StaticResource BoolToText}}" />
                                </StackPanel>
                            </Button.Content>
                        </Button>
                    </ToolBar>
                </ToolBarPanel>

                <StackPanel Orientation="Horizontal" Grid.Column="2" Margin="0 0 10 0">
                    <Button Style="{StaticResource ToolbarButton}" Click="ChangeViewClick">
                        <Button.Content>
                            <StackPanel Orientation="Vertical">
                                <Image Source="/Icons/h.png"  />
                                <TextBlock Style="{StaticResource ToolbarText}" Text="Huffman" />
                            </StackPanel>
                        </Button.Content>
                    </Button>
                </StackPanel>
            </Grid>
        </Border>



        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                      CanContentScroll="True" Grid.Row="1" Background="White" >
            <Canvas
                Width="{Binding CanvasWidth}"
                Height="{Binding CanvasHeight}"
                HorizontalAlignment="Center" VerticalAlignment="Top" >

                <ItemsControl ItemsSource="{Binding Nodes}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding Position.X}" />
                            <Setter Property="Canvas.Top" Value="{Binding Position.Y}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid MouseLeftButtonDown="NodeClick" Cursor="Hand" Tag="{Binding ID}" x:Name="NodeGrid"
                                  ToolTipService.InitialShowDelay="200"  ToolTipService.ShowDuration="5000" 
                                    ToolTipService.BetweenShowDelay="500" ToolTip="{Binding Value}">
                                <Grid.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Change value" Click="ChangeMenuItem_Click">
                                            <MenuItem.Icon>
                                                <Image Source="/Icons/change.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="Delete this node" Click="DeleteMenuItem_Click">
                                            <MenuItem.Icon>
                                                <Image Source="/Icons/delete.png" />
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </Grid.ContextMenu>
                                <Ellipse
                                    DataContext="{StaticResource vm}"
                                    Width="{Binding CircleDiameter}"
                                    Height="{Binding CircleDiameter}"
                                    Stroke="Black" StrokeThickness="3">
                                    <Ellipse.Fill>
                                        <MultiBinding Converter="{StaticResource IdToColor}">
                                            <Binding Path="Tag" ElementName="NodeGrid" />
                                            <Binding Path="SelectedNodeId" />
                                            <Binding Source="White" />
                                            <Binding Source="AntiqueWhite" />
                                        </MultiBinding>
                                    </Ellipse.Fill>
                                </Ellipse>
                                <TextBlock FontWeight="Bold" FontSize="{Binding DataContext.NodeValueSize, ElementName=MainGrid}"
                                           Text="{Binding Value, Converter={StaticResource ValueToString}}"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <ItemsControl ItemsSource="{Binding NullNodes}"
                              Visibility="{Binding InputVisible, Converter={StaticResource BoolToVis}}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Left" Value="{Binding Position.X}" />
                            <Setter Property="Canvas.Top" Value="{Binding Position.Y}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid MouseLeftButtonDown="NullNodeClick" Tag="{Binding ID}" x:Name="NullNode">
                                <Ellipse
                                    Cursor="Hand"
                                    DataContext="{StaticResource vm}"
                                    Width="{Binding AddCircleDiameter}"
                                    Height="{Binding AddCircleDiameter}"
                                    StrokeThickness="3" Fill="Transparent"
                                >
                                    <Ellipse.Stroke>
                                        <MultiBinding Converter="{StaticResource IdToColor}">
                                            <Binding Path="Tag" ElementName="NullNode" />
                                            <Binding Path="SelectedNullNodeId" />
                                            <Binding Source="Black" />
                                            <Binding Source="Red" />
                                        </MultiBinding>
                                    </Ellipse.Stroke>
                                </Ellipse>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

                <ItemsControl ItemsSource="{Binding LinePositions}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Line Stroke="Black" StrokeThickness="3"
                                  X1="{Binding StartPosition.X}" Y1="{Binding StartPosition.Y}"
                                  X2="{Binding EndPosition.X}" Y2="{Binding EndPosition.Y}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Canvas>
        </ScrollViewer>

        <Border Grid.Row="2" Background="{StaticResource FooterColor}" BorderBrush="Black" BorderThickness="0 3 0 0">
            <Grid x:Name="BottomSP">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Horizontal" Grid.Column="0" Margin="20 0 0 0">
                    <TextBlock Padding="5" FontSize="15" FontWeight="Bold"
                           Text="{Binding NumberOfNodes, StringFormat={}Number of nodes: {0}}" />
                    <TextBlock Padding="5" Margin="20 0 0 0" FontSize="15"
                           FontWeight="Bold" Text="{Binding TreeDepth, StringFormat={}Tree depth: {0}}" />
                    <TextBlock Padding="5" Margin="20 0 0 0" FontSize="15"
                           FontWeight="Bold" Text="{Binding MinNode, StringFormat={}Min node value: {0}}" />
                    <TextBlock Padding="5" Margin="20 0 0 0"
                       FontSize="15" FontWeight="Bold"
                       Text="{Binding MaxNode, StringFormat={}Max node value: {0}}"
                       />
                </StackPanel>

                <StackPanel Orientation="Horizontal" Grid.Column="2" HorizontalAlignment="Right" Margin="0 0 20 0">
                    <TextBlock Padding="5" Margin="20 0 0 0" FontSize="15" FontWeight="Bold" Text="Zoom level:" />
                    <Slider Width="100" Minimum="1"  Maximum="5" TickFrequency="1" TickPlacement="BottomRight"
                        VerticalAlignment="Center" Value="{Binding ZoomLevel, Mode=TwoWay,
                        UpdateSourceTrigger=PropertyChanged}"
                        ValueChanged="ZoomLevelChanged" Foreground="Black" />
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl>
